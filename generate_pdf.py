from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.platypus import Table, TableStyle
from reportlab.lib import colors
from reportlab.lib.utils import ImageReader
from io import BytesIO
import os
import qrcode
from PIL import Image  # Sometimes required explicitly for qrcode



def create_pdf(student):
    buffer = BytesIO()
    c = canvas.Canvas(buffer, pagesize=A4)
    width, height = A4

    # === 1. Top Header Block ===
    top_y = height - 80
    c.setFillColorRGB(0.2, 0.4, 0.8)
    c.rect(0, top_y - 10, width, 70, fill=1, stroke=0)

    # School Logo
    logo_path = "static/logo1.png"
    if os.path.exists(logo_path):
        logo = ImageReader(logo_path)
        c.drawImage(logo, 40, top_y, width=50, height=50, preserveAspectRatio=True, mask='auto')

    # Title
    c.setFont("Helvetica-Bold", 20)
    c.setFillColor(colors.whitesmoke)
    c.drawCentredString(width / 2.0, top_y + 15, "ðŸŽ“ Student Report Card ðŸŽ“")

    # QR Code
    qr_data = f"http://localhost:5000/student/{student.roll_no}"
    qr = qrcode.make(qr_data)
    qr_buffer = BytesIO()
    qr.save(qr_buffer)
    qr_buffer.seek(0)
    qr_image = ImageReader(qr_buffer)
    c.drawImage(qr_image, width - 90, top_y, width=50, height=50, preserveAspectRatio=True)

    # === 2. School Info ===
    c.setFont("Helvetica-Bold", 14)
    c.setFillColor(colors.darkblue)
    c.drawCentredString(width / 2.0, height - 140, "ðŸ“˜ Springfield International School")
    c.setFont("Helvetica", 10)
    c.drawCentredString(width / 2.0, height - 155, "CBSE Affiliated | Near City Center | www.springfieldschool.edu")

    # === 3. Student Info Box ===
    c.setFillColorRGB(0.93, 0.95, 1)
    c.rect(50, height - 190, width - 100, 40, fill=1)
    c.setFont("Helvetica-Bold", 12)
    c.setFillColor(colors.black)
    c.drawString(60, height - 175, f"Name: {student.name}")
    c.drawString(300, height - 175, f"Roll No: {student.roll_no}")

    # === 4. Subject Table ===
    data = [
        ["Subject", "Marks"],
        ["Mathematics", student.subject1],
        ["Science", student.subject2],
        ["English", student.subject3],
        ["History", student.subject4],
        ["Computer", student.subject5],
    ]

    table = Table(data, colWidths=[250, 200])
    table.setStyle(TableStyle([
        ("BACKGROUND", (0, 0), (-1, 0), colors.darkblue),
        ("TEXTCOLOR", (0, 0), (-1, 0), colors.whitesmoke),
        ("ALIGN", (0, 0), (-1, -1), "CENTER"),
        ("FONTNAME", (0, 0), (-1, 0), "Helvetica-Bold"),
        ("FONTNAME", (0, 1), (-1, -1), "Helvetica"),
        ("FONTSIZE", (0, 0), (-1, -1), 12),
        ("BACKGROUND", (0, 1), (-1, -1), colors.aliceblue),
        ("BOX", (0, 0), (-1, -1), 1, colors.black),
        ("GRID", (0, 0), (-1, -1), 0.5, colors.grey),
        ("BOTTOMPADDING", (0, 0), (-1, 0), 10),
    ]))
    table.wrapOn(c, width, height)
    table.drawOn(c, 100, height - 400)

    # === 5. Summary Section ===
    c.setFont("Helvetica-Bold", 12)
    c.setFillColor(colors.darkgreen)
    y = height - 430
    c.drawString(100, y, f"Total Marks: {student.total}")
    c.drawString(100, y - 20, f"Average: {student.average:.2f}")
    c.drawString(100, y - 40, f"Grade: {student.grade}")
    c.setFillColor(colors.black)

    # === 6. Signature Box ===
    c.setFont("Helvetica-Oblique", 10)
    c.drawString(100, 120, "_____________________")
    c.drawString(100, 105, "Principal's Signature")

    # === 7. School Stamp ===
    c.setStrokeColor(colors.gray)
    c.rect(width - 160, 80, 100, 60)
    c.setFont("Helvetica", 10)
    c.drawCentredString(width - 110, 105, "School Stamp")

    # === 8. Footer ===
    c.setStrokeColor(colors.lightgrey)
    c.setFillColor(colors.lightskyblue)
    c.rect(0, 30, width, 30, fill=1)
    c.setFont("Helvetica-Oblique", 9)
    c.setFillColor(colors.black)
    c.drawCentredString(width / 2, 40, "Generated by Student Result Management System - Â© 2025")

    c.save()
    buffer.seek(0)
    return buffer
